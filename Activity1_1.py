# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OIhFvhCDP0gbBssRBmpOP9hzFTIXcM4c
"""

import numpy as np
import matplotlib.pyplot as plt

# Define the activation functions
def sigmoid(x):
    return 1 / (1 + np.exp(-x))

def relu(x):
    return np.maximum(0, x)

def leaky_relu(x, alpha=0.01):
    return np.where(x > 0, x, x * alpha)

def tanh(x):
    return np.tanh(x)

# Generate a range of values from -10 to 10 for plotting
x = np.linspace(-10, 10, 100)

# Calculate the function values
y_sigmoid = sigmoid(x)
y_relu = relu(x)
y_leaky_relu = leaky_relu(x)
y_tanh = tanh(x)

# Plotting
plt.figure(figsize=(12, 8))

plt.subplot(2, 2, 1)
plt.plot(x, y_sigmoid, label="Sigmoid")
plt.title("Sigmoid Activation Function")
plt.grid(True)

plt.subplot(2, 2, 2)
plt.plot(x, y_relu, label="ReLU", color='orange')
plt.title("ReLU Activation Function")
plt.grid(True)

plt.subplot(2, 2, 3)
plt.plot(x, y_leaky_relu, label="Leaky ReLU", color='green')
plt.title("Leaky ReLU Activation Function")
plt.grid(True)

plt.subplot(2, 2, 4)
plt.plot(x, y_tanh, label="Tanh", color='red')
plt.title("Tanh Activation Function")
plt.grid(True)

# Add a common legend
plt.figlegend(loc="upper right", bbox_to_anchor=(1,1), bbox_transform=plt.gcf().transFigure)

plt.tight_layout()
plt.show()